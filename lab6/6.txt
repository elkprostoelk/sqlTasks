//1.	Вивести значення наступних колонок: назва книги, ціна, назва видавництва. Використовувати внутрішнє з'єднання, застосовуючи where.
SELECT maininfo.book_title, maininfo.price, publishernames.publisher_name FROM maininfo, additionalinfo, publishernames WHERE additionalinfo.publisher=publishernames.pub_id AND maininfo.N=additionalinfo.book_id;

//2.	Вивести значення наступних колонок: назва книги, назва категорії. Використовувати внутрішнє з'єднання, застосовуючи inner join.
SELECT maininfo.book_title, categories.category_name FROM maininfo INNER JOIN additionalinfo INNER JOIN categories ON maininfo.N=additionalinfo.book_id AND additionalinfo.category=categories.category_id

//3.	Вивести значення наступних колонок: назва книги, ціна, назва видавництва, формат.
SELECT maininfo.book_title, maininfo.price, publishernames.publisher_name, bookformats.format_name FROM maininfo INNER JOIN additionalinfo INNER JOIN publishernames INNER JOIN bookformats ON maininfo.N=additionalinfo.book_id AND additionalinfo.publisher=publishernames.pub_id AND additionalinfo.b_format=bookformats.format_id;

//4.	Вивести значення наступних колонок: тема, категорія, назва книги, назва видавництва. Фільтр по темам і категоріям.
SELECT topics.topic_name, maininfo.book_title, publishernames.publisher_name FROM maininfo INNER JOIN additionalinfo INNER JOIN topics INNER JOIN publishernames ON maininfo.N=additionalinfo.book_id AND additionalinfo.publisher=publishernames.pub_id AND additionalinfo.topic=topics.topic_id;

//5.	Вивести книги видавництва 'BHV', видані після 2000 р
SELECT maininfo.book_title, publishernames.publisher_name, YEAR(additionalinfo.pub_date) FROM maininfo INNER JOIN additionalinfo INNER JOIN publishernames ON maininfo.N=additionalinfo.book_id AND publishernames.pub_id=additionalinfo.publisher WHERE publishernames.publisher_name LIKE 'BHV%' AND YEAR(additionalinfo.pub_date)>2000;

//6.	Вивести загальну кількість сторінок по кожній назві категорії. Фільтр по спадаючій кількості сторінок.
SELECT SUM(additionalinfo.pages), categories.category_name FROM additionalinfo INNER JOIN categories ON additionalinfo.category=categories.category_id GROUP BY categories.category_name ORDER BY SUM(additionalinfo.pages) DESC;

//7.	Вивести середню вартість книг по темі 'Використання ПК' і категорії 'Linux'.

//8.	Вивести всі дані універсального відношення. Використовувати внутрішнє з'єднання, застосовуючи where.

//9.	Вивести всі дані універсального відношення. Використовувати внутрішнє з'єднання, застосовуючи inner join.

//10.	Вивести всі дані універсального відношення. Використовувати зовнішнє з'єднання, застосовуючи left join / rigth join.

//11.	Вивести пари книг, що мають однакову кількість сторінок. Використовувати само об’єднання і аліаси (self join).

//12.	Вивести тріади книг, що мають однакову ціну. Використовувати самооб'єднання і аліаси (self join).

//13.	Вивести всі книги категорії 'C ++'. Використовувати підзапити (subquery).

//14.	Вивести книги видавництва 'BHV', видані після 2000 р Використовувати підзапити (subquery).

//15.	Вивести список видавництв, у яких розмір книг перевищує 400 сторінок. Використовувати пов'язані підзапити (correlated subquery).

//16.	Вивести список категорій в яких більше 3-х книг. Використовувати пов'язані підзапити (correlated subquery).

//17.	Вивести список книг видавництва 'BHV', якщо в списку є хоча б одна книга цього видавництва. Використовувати exists.

//18.	Вивести список книг видавництва 'BHV', якщо в списку немає жодної книги цього видавництва. Використовувати not exists.

//19.	Вивести відсортований загальний список назв тем і категорій. Використовувати union.

//20.	Вивести відсортований в зворотному порядку загальний список перших слів, назв книг і категорій що не повторюються. Використовувати union.